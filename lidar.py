''' lidar.py
This script reads the data generated by a 3D lidar sensor and assigns the lidar order
for posterior proccesing so a gray_image can be created with the data, the output in this
script is a csv file containing the original data plus two columns (Order & Color) which 
contains the order of the laser, from 0 (top) to 31 (bottom) and the color assignation from
0 (black) to 255 (white) according to the distance of each sensing data where:
0 = nearest point
255 = most distant point

Authors: Emilio Arredondo Pay√°n (628971) 
Contacts: emilio.arredondop@udem.edu
Organisation: Universidad de Monterrey
First created on Friday Nobember 22, 2024
'''

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt


df = pd.read_csv("poolGardenTec01_Frame10_PolarData.csv")
df = df.sort_values(["azimuth", "vert_angle"], ascending=[True, False])
df['distance_m'] = pd.to_numeric(df['distance_m'], errors='coerce')
Color = np.ceil(255*df['distance_m']/max(df['distance_m']))
df['Color'] = Color
df['Order'] = 0

# Array to manipulate by order the angles 
#-------------------------------------------------------------------------------------------
Order =  np.array([])
Angle = np.array([])
id = np.array([])
laser_id = 0

for i in df["vert_angle"].unique():
    Angle = np.append(Angle,np.array([i]),axis=0)
    laser_id = df.loc[df["vert_angle"] == i]["laser_id"].unique()
    id = np.append(id,laser_id,axis = 0)
Order = np.arange(32)
Angle = pd.DataFrame({'Angle': Angle,'laser_id': id,})
Angle = Angle.sort_values(["Angle"],ascending=False)
Angle['Order'] = Order
print(Angle)
#----------------------------------------------------------------------------

#---------------Asignation of order to every existing id---------------------
# Unir ambos DataFrames por 'laser_id', controlando los sufijos de las columnas duplicadas
df = df.merge(Angle[['laser_id', 'Order']], on='laser_id', how='left', suffixes=('', '_Angle'))
df['Order'] = df['Order_Angle']
df = df.drop(columns=['Order_Angle'])
#----------------------------------------------------------------------------

#-------------------------Filling missing values-----------------------------
for azimuth in df["azimuth"].unique():
    rows = df[df["azimuth"]==azimuth]
    rows = rows['laser_id'].unique()
    missing_ids = np.setdiff1d(Order,rows)
    for i in missing_ids:
        new_row = pd.DataFrame({'distance_m': [0], 'azimuth': [azimuth], 'laser_id': [i], 'vert_angle':Angle.loc[Angle['laser_id']==i]["Angle"].unique(),
                                'intensity': [0],'timestamp':[0],'Color':[0],'Order':Angle.loc[Angle['laser_id']==i]["Order"].unique()})
        df = pd.concat([df, new_row], ignore_index=True)
df.to_csv('Complete_data.csv',index=False)
#-----------------------------------------------------------------------------

